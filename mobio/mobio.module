<?php

/*******************************************************************************
*   Copyright (c) 2011, Open Technologies Bulgaria, Ltd. <http://otb.bg> 
*   Author: Alexander Todorov <atodorov()otb.bg>
*
*   This program is free software: you can redistribute it and/or modify
*   it under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 2 of the License, or
*   (at your option) any later version.
*
*   This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.
*
*   You should have received a copy of the GNU General Public License
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
********************************************************************************
*
* Helpers for Mobio.bg.
*
********************************************************************************/

/* handle Check code service */
function mobio_checkcode($servID, $code) {
    $res_lines = file("http://www.mobio.bg/code/checkcode.php?servID=$servID&code=$code");

    $ret = 0;
    if($res_lines) {
        if(strstr("PAYBG=OK", $res_lines[0])) {
            $ret = 1;
        } 
// else {
//            drupal_set_message(t($res_lines[0]), 'error');
//      }
    }else{
        drupal_set_message(t("Unable to connect to mobio.bg server"), 'error');
        $ret = 1;
    }

    return $ret;
}


/**
 * Implementation of hook_menu().
 */
function mobio_menu() {
  $items = array();

// има го тук и под node/%node/vip
// за удобство
  $items['sms/vip'] = array(
    'title' => t('ВИП обява'),
    'description' => t('ВИП обява'),
    'page callback' => 'mobio_vip',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['node/%node/vip'] = array(
    'title' => t('Направи ВИП'),
    'page callback' => 'mobio_vip_redirect',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );

  $items['node/%node/abuse'] = array(
    'title' => t('Flag as offensive'),
    'page callback' => 'mobio_abuse_redirect',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );

  $items['sms/vip/check'] = array(
    'title' => t('Проверка на SMS код'),
    'description' => t('Проверка на SMS код'),
    'page callback' => 'mobio_vip_check',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );


  $items['sms/fail'] = array(
    'title' => t('Грешка при обработка на SMS код'),
    'description' => t('Грешка при обработка на SMS код'),
    'page callback' => 'mobio_sms_fail',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

// има го и тук и под user/%user/srok за удобство
// и за да се вижда от админите на Mobio.bg
  $items['sms/srok'] = array(
    'title' => t('Удължаване на срок'),
    'description' => t('Удължаване на срок'),
    'page callback' => 'mobio_srok',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['sms/srok/check'] = array(
    'title' => t('Проверка на SMS код'),
    'description' => t('Проверка на SMS код'),
    'page callback' => 'mobio_srok_check',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['user/%user/mycontent'] = array(
    'title' => t('Моите обяви'),
    'description' => t('Моите обяви'),
    'page callback' => 'mobio_my_content',
    'page arguments' => array(1),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );

  $items['user/%user/srok'] = array(
    'title' => t('Удължаване на срок'),
    'description' => t('Удължаване на срок'),
    'page callback' => 'mobio_srok',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
  );

  $items['user/%user/sms'] = array(
    'title' => t('Моите SMS кодове'),
    'description' => t('Моите SMS кодове'),
    'page callback' => 'mobio_my_sms',
    'page arguments' => array(1),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'weight' => 4,
  );

  return $items;
}


// show the data from the my_sms_codes view
function mobio_my_sms($account) {
   global $user;

   // handle anonymous
   if ($user->uid == 0) {
      drupal_goto('<front>');
   }

   if ($account->uid != $user->uid) {
      // redirect to user page if they try to view somebody elses
      drupal_goto("user/$user->uid/sms");
   } else {
      return views_embed_view("my_sms_codes", $display_id = 'block_1');
   }
}


// show the data from the my_content view
function mobio_my_content($account) {
   global $user;

   // handle anonymous
   if ($user->uid == 0) {
      drupal_goto('<front>');
   }

   if ($account->uid != $user->uid) {
      // redirect to user page if they try to view somebody elses
      drupal_goto("user/$user->uid/mycontent");
   } else {
      return views_embed_view("my_content", $display_id = 'block_1');
   }
}


function mobio_abuse_redirect($node = NULL) {
   if ($node) {
      drupal_goto("abuse/report/node/$node->nid");
   }
}

function mobio_vip_redirect($node = NULL) {
   if ($node) {
      drupal_goto("sms/vip", "nid=$node->nid");
   }
}

function mobio_vip($node = NULL) {
  global $user;

  $message = <<<EOF
Услугата <em>ВИП обява</em> е достъпна за всички потребители. ВИП обявите се показват най-отгоре в списъка с обяви.
ВИП обявите спират да се показват след като изтече техния срок, също както обикновените обяви.
Колкото по-скъп е видът на обявата, толкова по-напред ще се показва тя.
EOF;

  if ($user->uid > 0) {
    $message .= <<<EOF
<br /><br /><strong>БОНУС:</strong><br />
Вие сте регистриран потребител. Когато въвеждате ВИП кода ще получите бонус - удължаване срока за публикуване на обяви с няколко дни.
Информация за услугата Удължаване на срок можете да намерите <a href="/sms/srok">тук</a>.
EOF;
  }

  $message .= "<br /><br />";
  $message .= "Можете да направите своята обява ВИП, ако искате да привлечете внимание към нея и бързо да намерите купувачи.";
  $message .= "<br /><br /><h4>";
  $message .= "За да използвате услугата ВИП обява изпратете SMS според показаната информация в таблицата и въведете получения код.";
  $message .= "</h4><br />";

  $message .= sprintf("<table><tr><th colspan='2'>%s</th><th>%s</th><th>%s</th><th>%s</th>",
                      "Вид на обявата", "SMS текст", "Номер", "Цена в лева с ДДС");

  if ($user->uid > 0)
     $message .= "<th>Бонус дни</th>";

  $message .= sprintf("</tr><tr><th>&nbsp;</th><th>%s</th><td>-</td><td>-</td><td>%s</td>",
                      "Обикновена", "безплатно");

  if ($user->uid > 0)
     $message .= "<td>-</td>";

  $message .= sprintf("</tr><tr><th><img src='/sites/all/themes/bebekarta/images/vip_1.png' alt='ВИП' /></th><th>%s</th><td><strong>bebevip</strong></td><td>%d</td><td>%s</td>",
                      "Бронзовa", 1095, "0.60");

  if ($user->uid > 0)
     $message .= "<td>1</td>";

  $message .= sprintf("</tr><tr><th><img src='/sites/all/themes/bebekarta/images/vip_2.png' alt='ВИП' /></th><th>%s</th><td><strong>bebevip</strong></td><td>%d</td><td>%s</td>",
                      "Сребърна", 1093, "1.20");

  if ($user->uid > 0)
     $message .= "<td>2</td>";

  $message .= sprintf("</tr><tr><th><img src='/sites/all/themes/bebekarta/images/vip_3.png' alt='ВИП' /></th><th>%s</th><td><strong>bebevip</strong></td><td>%d</td><td>%s</td>",
                      "Златна", 1092, "2.40");

  if ($user->uid > 0)
     $message .= "<td>3</td>";

  $message .= sprintf("</tr><tr><th><img src='/sites/all/themes/bebekarta/images/vip_4.png' alt='ВИП' /></th><th>%s</th><td><strong>bebevip</strong></td><td>%d</td><td>%s</td>",
                      "Платинена", 1094, "4.80");

  if ($user->uid > 0)
     $message .= "<td>4</td>";

  $message .= sprintf("</tr><tr><th><img src='/sites/all/themes/bebekarta/images/vip_5.png' alt='ВИП' /></th><th>%s</th><td><strong>bebevip</strong></td><td>%d</td><td>%s</td>",
                      "Диамантена", 1096, "6.00");

  if ($user->uid > 0)
     $message .= "<td>5</td>";

  $message .= "</tr></table><br /><br />";

  $nid = $_GET['nid']; // set if called as sms/vip?nid=XXX
  // $node is set if called via node/%node/vip

  // izbrali sme obqva
  if ($node || ($nid && is_numeric($nid) && ($node = node_load($nid)))) {
     $nodelink = '<a href="/'.drupal_get_path_alias("node/".$node->nid).'">'.$node->title.'</a>';

     if ($node->field_vip[0][value] > 0) {
        $message .= '<h3>ВНИМАНИЕ: '.sprintf(t("Обява %s вече е ВИП!"), $nodelink).' Моля НЕ изпращайте SMS!</h3>';
     } else {
        $message .= t("Направи ВИП: ");
        $message .= $nodelink;

        $message .= <<<EOF
<form method="get" action="/sms/vip/check">
<input type="hidden" name="nid" value="$node->nid"/>
SMS код: <input type="text" name="code"/>
<input type="submit" value="Изпращане"/>
</form>
EOF;
     }
  } else { // nqma izbrana obiava
     $message .= "<h3>ВНИМАНИЕ: Не е избрана валидна обява. Моля НЕ изпращайте SMS, ако виждате това съобщение!</h3>";
  }

  return $message;
}

function mobio_vip_check() {
   $nid = $_GET['nid'];
   $code = $_GET['code'];
   $services = array(
      1 => array('servID' => 17634, 'type' => "Бронзова"), // 0.60
      2 => array('servID' => 17640, 'type' => "Сребърна"), // 1.20
      3 => array('servID' => 17641, 'type' => "Златна"), // 2.40
      4 => array('servID' => 17642, 'type' => "Платинена"), // 4.80
      5 => array('servID' => 17643, 'type' => "Диамантена"), // 6.00
   );

   if ($nid && is_numeric($nid) && ($node = node_load($nid)) && $code) {
       // check validity for all services
       foreach($services AS $vip_weight => $service) {
           if(mobio_checkcode($service['servID'], $code) == 1) {
               // sms-a e validen. obnovqvame VIP poleto
               $node->field_vip[0][value] = $vip_weight;
               node_save($node);

               // удължаване срока за текущия потребител
               mobio_add_sms($code, $vip_weight, "ВИП обява");

               $message = t("Валиден SMS код.")." ".sprintf(t("Обява %s вече е %s!"), $node->title, $service['type']);
               drupal_set_message($message);
               $nodepath = drupal_get_path_alias('node/'.$node->nid);
               drupal_goto($nodepath);

               break;
           }
       }

       // no valid code found
       drupal_goto('sms/fail');
   } else {
       return "ГРЕШКА: Невалиден nid или code";
   }
}


function mobio_sms_fail() {
   return "<h3>Възникна грешка при обработката на вашия SMS код! Моля опитайте отново.</h3>";
}


function mobio_srok($account = NULL) {
  $message = <<<EOF
Услугата <em>Удължаване на срок</em> е достъпна <em>само за регистрирани потребители</em>.
Максималния срок на валидност на обявите от тип <em>Подарява</em> е <strong>30 дни</strong> след датата на
публикуване и той не може да бъде променян!

<br/><br />
По подразбиране максималния срок на валидност на обявите от тип <em>Продава</em> e <strong>7 дни</strong>
след датата на публикуване. Обявите с изтекъл срок спират да се показват на сайта.
За обяви от тип <em>Продава</em> можете да удължите този срок, ако изпратите SMS.
Всеки нов SMS добавя допълнителни дни към текущия срок.

<br /><br />
<strong>Пример за удължаване с 7 дни:</strong>
<table>
  <tr><th>Дата на публикуване</th><th>Изпратен SMS</th><th>Срок за Продава</th></tr>
  <tr><td>01 Октомври</td>        <td>-</td>           <td>до 08 Октомври</td></tr>
  <tr><td>02 Октомври</td>        <td>ДА</td>          <td>до 16 Октомври</td></tr>
  <tr><td>03 Октомври</td>        <td>-</td>           <td>до 16 Октомври</td></tr>
  <tr><td>04 Октомври</td>        <td>-</td>           <td>до 16 Октомври</td></tr>
  <tr><td>05 Октомври</td>        <td>ДА</td>          <td>до 23 Октомври</td></tr>
  <tr><td>01 Ноември</td>         <td>-</td>           <td>до 08 Ноември</td></tr>
</table>

<br /><br />
<h4>Можете да удължите срока за публикуване на обяви, ако изпратите SMS според показаната информация в таблицата и въведете получения код.</h4>
EOF;
  $message .= "<br /><br />";

  $message .= sprintf("<table><tr><th>%s</th><th>%s</th><th>%s</th><th>%s</th></tr>",
                      "Удължаване", "SMS текст", "Номер", "Цена в лева с ДДС");

  $message .= sprintf("<tr><th>%s</th><td><strong>bebesrok</strong></td><td>%s</td><td>%s</td></tr>",
                      "7 дни", "1095", "0.60");

  $message .= sprintf("<tr><th>%s</th><td><strong>bebesrok</strong></td><td>%s</td><td>%s</td></tr>",
                      "30 дни", "1093", "1.20");

  $message .= sprintf("<tr><th>%s</th><td><strong>bebesrok</strong></td><td>%s</td><td>%s</td></tr>",
                      "90 дни", "1092", "2.40");

  $message .= sprintf("<tr><th>%s</th><td><strong>bebesrok</strong></td><td>%s</td><td>%s</td></tr>",
                      "180 дни", "1094", "4.80");

  $message .= sprintf("<tr><th>%s</th><td><strong>bebesrok</strong></td><td>%s</td><td>%s</td></tr>",
                      "365 дни", "1096", "6.00");

  $message .= "</table><br /><br />";


  global $user;

  // registriran potrebitel
  if ($user->uid > 0) {
    $message .= t("Удължаване на срок за публикуване: ");

    $message .= <<<EOF
<form method="get" action="/sms/srok/check">
SMS код: <input type="text" name="code"/>
<input type="submit" value="Изпращане"/>
</form>
EOF;
  } else { // ne sme lognati
     $message .= "<h3>ВНИМАНИЕ: Не сте логнат в сайта или е възникнала грешка. Моля НЕ изпращайте SMS, ако виждате това съобщение!</h3>";
  }


  return $message;
}

function mobio_srok_check() {
   $code = $_GET['code'];
   global $user;

   $services = array(
      array('servID' => 17677, 'days' => 7),   // 0.60
      array('servID' => 17678, 'days' => 30),  // 1.20
      array('servID' => 17679, 'days' => 90),  // 2.40
      array('servID' => 17680, 'days' => 180), // 4.80
      array('servID' => 17681, 'days' => 365), // 6.00
   );

   if (($user->uid > 0) && $code) {
       // check validity for all services
       foreach($services AS $service) {
           if(mobio_checkcode($service['servID'], $code) == 1) {
               // sms-a e validen.

               mobio_add_sms($code, $service['days'], "Удължаване на срок");

               $message = t("Валиден SMS код.")." ".sprintf(t("Добавихте %d дни към вашия срок за публикуване!"), $service['days']);
               drupal_set_message($message);
               drupal_goto("user/$user->uid/sms");

               break;
           }
       }

       // no valid code found
       drupal_goto('sms/fail');
   } else {
       return "ГРЕШКА: Не сте логнат в сайта или невалиден код!";
   }
}

// adds new SMS code into the database
function mobio_add_sms($code, $days, $service_name) {
   global $user;

   // do nothing for Anonymous
   if ($user->uid == 0) {
      return;
   }

   // node_object_prepare() is defined here
   module_load_include('inc', 'node', 'node.pages');

   $node = new stdClass();
   $node->type = 'sms';
   $node->uid = $user->uid;
   $node->title = $code;
   $node->body = $service_name;
   $node->field_added_days[0][value] = $days;
   $node->field_sms_expired[0][value] = 0;
   $node->status = 0;

   node_object_prepare($node);
   node_save($node);
}


// allowed values for expiresat field
function mobio_get_expiresat_allowed_values() {
   global $user;

   $month_names = array('', t('January'), t('February'), t('March'), t('April'),
                            t('May'), t('June'), t('July'), t('August'),
                            t('September'), t('October'), t('November'), t('December'),
                       );

    $today = strtotime(date('Y-m-d')); // 00:00:00
    $lastday = 0;

    $result = array('' => '');

    // add 7 days for Prodava
    for ($i = 0; $i <= 7; $i++) {
        $nextday = strtotime("+$i days", $today);
        $lastday = $i;
        $month = $month_names[date('n', $nextday)];
        $result[$i] = date('d', $nextday)." ".$month." ".date('Y', $nextday);
    }

    // todo: add up to 30 days for Podariava

    // get all extra days from the DB
    $sql = <<<EOF
SELECT
  n.nid, n.created, cck.field_added_days_value
FROM {node} AS n, {content_type_sms} AS cck
WHERE (n.type = "sms") AND (n.uid=%d) AND (n.nid=cck.nid) AND (cck.field_sms_expired_value = 0)
ORDER BY n.created ASC
EOF;

    $extra_days = array(); // how many days were added on each day groupped by submission date
    $days = 0; // this is what needs to be added at the end. in days
    $nodes = db_query($sql, $user->uid);

    // store data about added days and nodes that define them groupped by node creation date
    while( $row = db_fetch_array($nodes)) {
        $created = strtotime(date('Y-m-d', $row['created'])); // 00:00:00

        if (array_key_exists($created, $extra_days)) {
            $extra_days[$created]['days'] += $row['field_added_days_value'];
            $extra_days[$created]['nids'][] = $row['nid'];
        } else {
            $extra_days[$created] = array('days' => $row['field_added_days_value'], 'nids' => array($row['nid']));
        }
    }


    // loop through all days and find expired ones
    foreach($extra_days AS $key => $value) {
        // this is already without HH:MM:SS precision
        $expire_date = strtotime(sprintf("+%d days", $value['days']), $key);

        if ($expire_date <= $today) { // already without HH:MM:SS precision
            // mark these SMS codes as expired
            foreach($value['nids'] AS $nid) {
               $node = node_load($nid, NULL, TRUE);
               $node->field_sms_expired[0][value] = 1;
               node_save($node);
            }
        } else { // still a valid code.
            // the day delta between today and the date when these codes were activated
            $delta = floor(($today - $key)/86400); // 60 * 60 * 24 in days
            $days += $value['days'] - $delta; // the total number of days minus the elapsed time
            // the end DATE should remain the same.
        }
    }

    // add the additional days
    $lastday++;
    for ($i = $lastday; $i < $lastday + $days; $i++) {
        $nextday = strtotime("+$i days", $today);
        $month = $month_names[date('n', $nextday)];
        $result[$i] = date('d', $nextday)." ".$month." ".date('Y', $nextday);
    }

   return $result;
}

// used in Rules -> Tirggered rules
function mobio_rules_trigger_set_validto($node) {
    $today = strtotime(date('Y-m-d')); // strip HH:MM:SS precision

    $days = 30; // after how many days to expire

    // custom value for Prodava nodes
    if ($node->type == "prodava") {
        $days = $node->field_expiresat[0][value];
    }

    $validto = strtotime("+$days days", $today); // 00:00:00
    $validto += 86399; // 23:59:59 - valid till end of day

    $node->field_validto[0][value] = $validto;

    return array('node' => $node);
}

// expand file attachments field
function mobio_form_alter(&$form, &$form_state, $form_id) {
    if (($form_id == 'podariava_node_form') || ($form_id == 'prodava_node_form')) {
        $form['attachments']['#collapsed'] = FALSE;
        $form['attachments']['#collapsible'] = FALSE;

//        $form['location']['locations'][0]['locpick']['user_longitude']['#prefix'] = 'DEBUG';
//        $form['location']['locations'][0]['locpick']['instructions']['#prefix'] = 'DEBUG';
    }
}

// get default values from user profile

function mobio_default_email() {
    global $user;
    if ($user->uid > 0) {
       return array(0 => array('value' => $user->mail));
    }
}

function mobio_default_name() {
    global $user;
    if ($user->uid > 0) {
       profile_load_profile($user);
       return array(0 => array('value' => $user->profile_realname));
    }
}

function mobio_default_phone() {
    global $user;
    if ($user->uid > 0) {
       profile_load_profile($user);
       return array(0 => array('value' => $user->profile_phone));
    }
}

function mobio_default_skype() {
    global $user;
    if ($user->uid > 0) {
       profile_load_profile($user);
       return array(0 => array('value' => $user->profile_skype));
    }
}

// helper function
function mobio_show_facebook($arg0, $arg1) {
    $nid = 0;

    // try to find a file for the current node
    if ($arg0 == 'node' && is_numeric($arg1)) {
        $nid = $arg1;
    }
    $node = node_load($nid);

    return ($node) && (($node->type == 'prodava') || ($node->type == 'podariava'));
}

function mobio_show_taxonomy_map_list() {
// show a list view together with the map view
    $view_args = drupal_get_normal_path($_GET["q"]);
    $view_args = str_replace("taxonomy/term/", '', $view_args);
    $view_args = str_replace("/all", '', $view_args);

    if ($view_args == "map/node" ) {
        $view_args = "all";
    }

    $output = views_embed_view("taxonomy_map", $display_id = 'page_2', $view_args);
    print $output;
}


// helper compare function used for sorting
function mobio_term_compare($a, $b) {
    return strcasecmp($a->name, $b->name);
}

function mobio_show_child_terms() {
    $vid = 1;
    $allchildren = array();

    // first level of children
    $children = taxonomy_get_children(5, $vid);

    foreach($children as $child) {
        // second level of children
        $subchildren = taxonomy_get_children($child->tid, $vid);

        // count nodes for subchildren terms
        foreach($subchildren as $subchild) {
            $count = taxonomy_term_count_nodes($subchild->tid);

            if (array_key_exists($count, $allchildren)) {
                $allchildren[$count][] = $subchild;
            } else {
                $allchildren[$count] = array($subchild);
            }
        }
    }

    // sort by count first
    krsort($allchildren);

    $output = "<table border='0'>";
    $output .= "<tr>";
    $i = 0;
    $total = 0;

    foreach($allchildren AS $count => $children) {
        uasort($children, 'mobio_term_compare');
        foreach($children AS $child) {
            if ($i == 0) {
                $output .= "<td valign='top' align='left'><ul>";
            }

            $output .= sprintf("<li><a href='%s'>%s (%s)</a></li>",
                                taxonomy_term_path($child), $child->name, $count
                              );
            $i++;
            $total++;

            if ($i == 5) {
                $output .= "</ul>";
                $output .= "</td>";
                $i = 0;
            }

            if ($total == 30) {
                break 2; // exit both foreach loops
            }
        }
    }

    $output .= "</tr>";
    $output .= "</table>";

    print $output;
}

?>
